
//Import various math classes for use in the program and decimal format for rounding
import static java.lang.Math.abs;
import static java.lang.Math.log;
import static java.lang.Math.sin;
import static java.lang.Math.sqrt;
import static java.lang.Math.toDegrees;
import java.text.DecimalFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Created By Ethan Watt
 * On October 3, 2016
 * Demonstrate a method of creating a GUI, using the math class, commenting, and methods
 */
public class mathMethods extends javax.swing.JFrame {

    /**
     * Creates new form mathMethods
     */
    public mathMethods() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        absoluteValueLabel = new javax.swing.JLabel();
        absoluteValueInput = new javax.swing.JTextField();
        absoluteValueOutput = new javax.swing.JLabel();
        logarithmLabel = new javax.swing.JLabel();
        logarithmInput = new javax.swing.JTextField();
        logarithmOutput = new javax.swing.JLabel();
        squareRootLabel = new javax.swing.JLabel();
        squareRootInput = new javax.swing.JTextField();
        squareRootOutput = new javax.swing.JLabel();
        absoluteValueButton = new javax.swing.JButton();
        logarithmButton = new javax.swing.JButton();
        squareRootButton = new javax.swing.JButton();
        radiansToDegreesLabel = new javax.swing.JLabel();
        radiansToDegreesInput = new javax.swing.JTextField();
        radiansToDegreesOutput = new javax.swing.JLabel();
        sineLabel = new javax.swing.JLabel();
        sineInput = new javax.swing.JTextField();
        sineOutput = new javax.swing.JLabel();
        radiansToDegreesButton = new javax.swing.JButton();
        sineButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Math Methods");

        absoluteValueLabel.setText("Absolute Value ");

        logarithmLabel.setText("Logarithm");

        squareRootLabel.setText("Square Root");

        absoluteValueButton.setText("Run");
        absoluteValueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                absoluteValueButtonActionPerformed(evt);
            }
        });

        logarithmButton.setText("Run");
        logarithmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logarithmButtonActionPerformed(evt);
            }
        });

        squareRootButton.setText("Run");
        squareRootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareRootButtonActionPerformed(evt);
            }
        });

        radiansToDegreesLabel.setText("Radians to Degrees");

        sineLabel.setText("Sine of an Angle in Degrees");

        radiansToDegreesButton.setText("Run");
        radiansToDegreesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiansToDegreesButtonActionPerformed(evt);
            }
        });

        sineButton.setText("Run");
        sineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(absoluteValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radiansToDegreesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(radiansToDegreesOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(absoluteValueInput)
                            .addComponent(absoluteValueOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radiansToDegreesInput))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(logarithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(logarithmInput)
                                .addComponent(logarithmOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sineLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(sineOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(sineInput, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(squareRootOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(squareRootLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(squareRootInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                .addGap(0, 26, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(absoluteValueButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logarithmButton)
                .addGap(128, 128, 128)
                .addComponent(squareRootButton)
                .addGap(79, 79, 79))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(radiansToDegreesButton)
                .addGap(133, 133, 133)
                .addComponent(sineButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(absoluteValueLabel)
                    .addComponent(logarithmLabel)
                    .addComponent(squareRootLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(absoluteValueInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logarithmInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(squareRootInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(squareRootOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                    .addComponent(absoluteValueOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logarithmOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(absoluteValueButton)
                    .addComponent(logarithmButton)
                    .addComponent(squareRootButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiansToDegreesLabel)
                    .addComponent(sineLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiansToDegreesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sineInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(radiansToDegreesOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addComponent(sineOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiansToDegreesButton)
                    .addComponent(sineButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Runs when the absolute value button is pressed and calculates and displays the absolute value
     * pre: evt 
     * post: no postcondition
     */
    private void absoluteValueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_absoluteValueButtonActionPerformed
        // TODO add your handling code here:
        
        //Try the following code
        try{
            
        //Get user input, calculate, round, and then output the absolute value
        double userInput = Double.parseDouble(absoluteValueInput.getText()); //Get user input from the label
        double absoluteNum = abs(userInput); //Find the absolute value
        absoluteNum = rounding(absoluteNum); //Round the number
        absoluteValueOutput.setText("The absolute number is "+absoluteNum); //Output the rounded number
        errorLabel.setText(""); //Clear the error labels
         }
        
        //Catch bad user input
        catch(NumberFormatException e){
            errorLabel.setText("Please input a double value"); //Set error message
            clearingStatements(); //Run statements method and clear all labels
        }
    }//GEN-LAST:event_absoluteValueButtonActionPerformed

    
    /**
     * Runs when the logarithm button is pressed and calculates and displays the logarithm
     * pre: evt 
     * post: no postcondition
     */
    private void logarithmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logarithmButtonActionPerformed
        // TODO add your handling code here:
        
        //Try the following code
        try{
            
            //Get user input, calculate, round, and then output the logarithm
            double userInput = Double.parseDouble(logarithmInput.getText()); //Get user input from the label
            
            //If the user input is above zero run
            if(userInput>0){
                double logNum = log(userInput); //Find the logarithm 
                logNum = rounding(logNum); //Round the logarithm
                logarithmOutput.setText("The logarithm is "+logNum); //Output the rounded number
                errorLabel.setText(""); //Clear the error label
            }
            //If the user input is zero or below run
            else{
                errorLabel.setText("Please input a positive number"); //Set error message
                clearingStatements(); //Run statements method and clear all labels
            }
         }
        
        //Catch bad user input
        catch(NumberFormatException e){
            errorLabel.setText("Please input a double value"); //Set error message
            clearingStatements(); //Run statements method and clear all labels
        }
    }//GEN-LAST:event_logarithmButtonActionPerformed

    
    /**
     * Runs when the square root button is pressed and calculates and displays the square root
     * pre: evt 
     * post: no postcondition
     */
    private void squareRootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareRootButtonActionPerformed
        // TODO add your handling code here:
        
        //Try the following code
        try{
            //Get user input, calculate, round, and then output the square root
            double userInput = Double.parseDouble(squareRootInput.getText()); //Get user input from the label
            
            //If the user input is zero or above run
            if(userInput>=0){
                double squareRootNum = sqrt(userInput); //Square root the user input
                squareRootNum = rounding(squareRootNum); //Round the square root
                squareRootOutput.setText("The square root is "+squareRootNum); //Output the rounded square root
                errorLabel.setText(""); //Clear error label
            }
            //If the user input is below zero run
            else{
                errorLabel.setText("Please input a positive number"); //Set error message
                clearingStatements(); //Run statements method and clear all labels
            }
         }
        
        //Catch bad user input
        catch(NumberFormatException e){
            errorLabel.setText("Please input a double value"); //Set error message
            clearingStatements(); //Run statements method and clear all labels
        }
    }//GEN-LAST:event_squareRootButtonActionPerformed

    
    /**
     * Runs when the radians to degrees button is pressed and calculates and displays the degrees
     * pre: evt 
     * post: no postcondition
     */
    private void radiansToDegreesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiansToDegreesButtonActionPerformed
        // TODO add your handling code here:
        
        //Try the following code
        try{
            
            //Get user input, calculate, round, and then output the degrees
            double userInput = Double.parseDouble(radiansToDegreesInput.getText()); //Get user input from the label
            double degreesNum = toDegrees(userInput); //Convert the radians to degrees
            degreesNum = rounding(degreesNum); //Round the degrees
            radiansToDegreesOutput.setText("The degrees is "+degreesNum); //Output the rounded degrees
            errorLabel.setText(""); //Clear error label
         }
        
        //Catch bad user input
        catch(NumberFormatException e){
            errorLabel.setText("Please input a double value"); //Set error label
            clearingStatements(); //Run statements method and clear all labels
        }
        
    }//GEN-LAST:event_radiansToDegreesButtonActionPerformed

    
    /**
     * Runs when the sine value button is pressed and calculates and displays the sine of the angle
     * pre: evt 
     * post: no postcondition
     */
    private void sineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sineButtonActionPerformed
        // TODO add your handling code here:
        
        //Try following code
        try{
            
            //Get user input, calculate, round, and then output the sine of the angle
            double userInput = Double.parseDouble(sineInput.getText()); //Get user input from the label
            double sineNum = sin(userInput); //Find the sine of the angle
            sineNum = rounding(sineNum); //Round the sine value
            sineOutput.setText("The sine is "+sineNum); //Output the sine value
            errorLabel.setText(""); //Clear error label
        }
        
        //Catch bad user input
        catch(NumberFormatException e){
            errorLabel.setText("Please input a double value"); //Set error Labels
            clearingStatements(); //Run statements method and clear all labels
        }
    }//GEN-LAST:event_sineButtonActionPerformed

    /**
     * @param args[]
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mathMethods().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton absoluteValueButton;
    private javax.swing.JTextField absoluteValueInput;
    private javax.swing.JLabel absoluteValueLabel;
    private javax.swing.JLabel absoluteValueOutput;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton logarithmButton;
    private javax.swing.JTextField logarithmInput;
    private javax.swing.JLabel logarithmLabel;
    private javax.swing.JLabel logarithmOutput;
    private javax.swing.JButton radiansToDegreesButton;
    private javax.swing.JTextField radiansToDegreesInput;
    private javax.swing.JLabel radiansToDegreesLabel;
    private javax.swing.JLabel radiansToDegreesOutput;
    private javax.swing.JButton sineButton;
    private javax.swing.JTextField sineInput;
    private javax.swing.JLabel sineLabel;
    private javax.swing.JLabel sineOutput;
    private javax.swing.JButton squareRootButton;
    private javax.swing.JTextField squareRootInput;
    private javax.swing.JLabel squareRootLabel;
    private javax.swing.JLabel squareRootOutput;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Method to clear statements and labels
     * pre: no precondition
     * post: no postcondition
     */
public void clearingStatements(){
    //Clear all labels and inputs
    absoluteValueOutput.setText("");
    logarithmOutput.setText("");
    radiansToDegreesOutput.setText("");
    sineOutput.setText("");
    squareRootOutput.setText("");
    absoluteValueInput.setText("");
    logarithmInput.setText("");
    radiansToDegreesInput.setText("");
    sineInput.setText("");
    squareRootInput.setText("");
    
}


/**
     * Method to round numbers to convenient decimal places
     * pre: A number inputted by a user that they want to round
     * post: The rounded number
     */
public static double rounding(double userNumber){
    DecimalFormat f = new DecimalFormat("##.##"); //Set up decimal format to round to 2 decimal places if needed
    double roundedNum = Double.parseDouble(f.format(userNumber)); //Set the new rounded number to a variable
    return roundedNum; //Return the rounded number
}

}
